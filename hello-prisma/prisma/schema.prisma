// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TransactionType {
  Deposit
  Withdrawal
}
   
   
enum AccountStatus {
  Active
  Suspended
  Deactivated
}

// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   title     String   @db.VarChar(255)
//   content   String? 
//   published Boolean  @default(false)
//   author    User     @relation(fields: [authorId], references: [id])
//   authorId  Int
// }

// model Profile {
//   id     Int     @id @default(autoincrement())
//   bio    String?
//   user   User    @relation(fields: [userId], references: [id])
//   userId Int     @unique
// }

// model User {
//   id      Int      @id @default(autoincrement())
//   email   String   @unique
//   name    String?
//   posts   Post[]
//   profile Profile?
// }


model Customer {
  idCustomer  Int @id @default(autoincrement())
  firstname   String
  lastName    String
  address     String @db.VarChar(255)

  bankAccount bankAccount[]
}

model bankAccount {
  id            Int @id @default(autoincrement())
  accountNumber String @unique
  accountName   String
  balance       Int @default(0)
  customer      Customer @relation(fields: [idCustomer], references: [idCustomer])
  idCustomer    Int @unique
}

model Transactions {
  id                Int @id @default(autoincrement())
  transaction_type  TransactionType
  amount            Float
  performedBy       String
  date              DateTime @default(now())
}